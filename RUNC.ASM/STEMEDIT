//T311LBDE JOB XXXEXCP9,T311LBD,                                        00001000
//          NOTIFY=T311LBD,MSGCLASS=R                                   00002000
//OUT       OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)            00003000
//HLASM EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)         00004000
*********************************************************************** 00005001
*                                                                     * 00006001
* MODULE NAME = STEMEDIT                                              * 00007001
*                                                                     * 00008001
* DESCRIPTIVE NAME = Display REXX Stem Variables using BRIF or VIIF.  * 00009001
*                                                                     * 00010001
* STATUS = R209                                                       * 00020001
*                                                                     * 00030001
* FUNCTION = This assembler sub-routine can be invoked by a REXX      * 00040001
*            EXEC to display the contents of stem variables using     * 00050001
*            the ISPF BRIF, VIIF or EDIT services.  STEMEDIT is       * 00060001
*            a nice complement to the REXX OUTTRAP function,          * 00070001
*            when it is used in the ISPF/PDF environment.             * 00080001
*                                                                     * 00090001
*            STEMEDIT can also PULL lines from the data stack         * 00100001
*            instead of using stem variables.  This only works        * 00110001
*            with EDIT or VIEW, i.e. not with BROWSE.                 * 00120001
*                                                                     * 00130001
* R208       STEMEDIT can be used to view or edit all variables.      * 00140001
* R208       Together with "TRACE ?R" STEMEDIT can be used for        * 00150001
* R208       debugging your REXX programs.                            * 00160001
*                                                                     * 00170001
* AUTHOR = Gilbert Saint-Flour <carlosºgsf-soft.com>                  * 00180001
*          http://gsf-soft.com/Freeware/                              * 00190001
*                                                                     * 00200001
* ENVIRONMENT = SEE BELOW                                             * 00210001
*                                                                     * 00220001
*    DEPENDENCIES: OS/390 R10 or z/OS                                 * 00230001
*                  ISPF/PDF V3 (or above)                             * 00240001
*                                                                     * 00250001
* MODULE TYPE = PROCEDURE, (CSECT TYPE)                               * 00260001
*                                                                     * 00270001
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      * 00280001
*                IBM HIGH LEVEL ASSEMBLER/MVS                         * 00290001
*                                                                     * 00300001
*    MODULE SIZE = 2K                                                 * 00310001
*                                                                     * 00320001
*    ATTRIBUTES = REENTERABLE, RMODE ANY, AMODE 31,                   * 00330001
*                 PROBLEM STATE, KEY 8                                * 00340001
*                 APF AUTHORIZATION: NONE                             * 00350001
*                                                                     * 00360001
* SYNTAX  =  See below                                                * 00370001
*                                                                     * 00380001
*    CALL STEMEDIT  service,                                          * 00390001
*                   stemname                                          * 00400001
*                   <,firstelem>                                      * 00410001
*                   <,stemcount>                                      * 00420001
*                   <,title>                                          * 00430001
*                   <,panel>                                          * 00440001
*                   <,lrecl>                                          * 00450001
*                   <,recfm>                                          * 00460001
*                   <,profile>                                        * 00470001
* R208              <,varl>                                           * 00480001
*                                                                     * 00490001
*    Arguments:                                                       * 00500001
*                                                                     * 00510001
*         service   This argument must be coded as 'BROWSE', 'VIEW'   * 00520001
*                   or 'EDIT'.  It indicates which of the BRIF,       * 00530001
*                   VIIF or EDIF services will be used for display.   * 00540001
*                                                                     * 00550001
*                   If the BROWSE service is requested, the user can  * 00560001
*                   enter the V commands on the BROWSE screen to      * 00570001
*                   switch to VIEW.  This allows the data to be       * 00580001
*                   saved using CREATE/REPLACE, CUT or ROUTE.         * 00590001
*                                                                     * 00600001
*         stemname  the stem of the family of variables to display.   * 00610001
*                   The combined lengths of the stemname argument     * 00620001
*                   and the largest subscript (plus the period, if    * 00630001
*                   specified) cannot exceed 80 characters.           * 00640001
*                   If stemname is a true REXX stem, code a period    * 00650001
*                   as the last character.  If you do not specify     * 00660001
*                   the period, the subscripts will be concatenated   * 00670001
*                   to the stem name without an intervening period.   * 00680001
*                   For example, if you specify a stemname of "ABC.", * 00690001
*                   STEMEDIT will look for variables of the form      * 00700001
*                   "ABC.1", "ABC.2", etc. If you specify a stemname  * 00710001
*                   of "XYZ" (no period), STEMEDIT will look for      * 00720001
*                   variables of the form "XYZ1", "XYZ2", etc.        * 00730001
*                                                                     * 00740001
*                   If the service is coded as "VIEW" or "EDIT" and   * 00750001
*                   stemname is omitted, STEMEDIT PULLs lines from    * 00760001
*                   the stack.                                        * 00770001
* R208              If the service is coded as "VIEW" or "EDIT"       * 00780001
* R208              stemname can be coded as "*", which will display  * 00790001
* R208              all variables in the REXX variable pool. Variable * 00800001
* R208              names will be shown with 39 characters, except you* 00810001
* R208              code varl as "L", showing variable names with 255 * 00820001
* R208              characters. If variable name is longer, it will   * 00830001
* R208              be abbreviated to 38 or 254 characters and        * 00840001
* R208              suffixed with "*". Last variable is always the    * 00850001
* R208              contents of VARNAME from this program.            * 00860001
* R208              If the service is coded as "EDIT" and stemname    * 00870001
* R208              is coded as "*", variables can be edited. It must * 00880001
* R208              be coded with variable name beginning in colume   * 00890001
* R208              1, some blanks endet with "=" and immediately     * 00900001
* R208              followed by the value, which must be ended with   * 00910001
* R208              "00"x. You can also drop a variable or a stem     * 00920001
* R208              by coding "DROP variablename" at the beginning    * 00930001
* R208              of the line and end it with "00"x.                * 00940001
* R208              Variable name can have a length up to 250.        * 00950001
*                                                                     * 00960001
*         firstelem the element of the pseudo-array to begin the      * 00970001
*                   display on.  The default value is element 1.      * 00980001
*                                                                     * 00990001
*         stemcount the number of elements to display.                * 01000001
*                   If you do not specify stemcount, STEMEDIT will    * 01010001
*                   display variables beginning with firstelem, and   * 01020001
*                   continuing until an un-initialized variable is    * 01030001
*                   found (i.e., a variable which has its name for    * 01040001
*                   a value).                                         * 01050001
*                                                                     * 01060001
*         title     an arbitrary character string which identifies    * 01070001
*                   the data which is being displayed.  The maximum   * 01080001
*                   length of this string is 54 characters.           * 01090001
*                                                                     * 01100001
*         panel     a 1 to 8 character name of the panel member       * 01110001
*                   to use for the display.                           * 01120001
*                   The default panel is ISRBROBA for BROWSE          * 01130001
*                   and ISREDDE2 for VIEW and EDIT.                   * 01140001
*                                                                     * 01150001
*         lrecl     the record length that should be passed to        * 01160001
*                   the BRIF, VIIF or EDIF services.                  * 01170001
*                   The default value is 255.                         * 01180001
*                                                                     * 01190001
*         recfm     the record format that should be passed to        * 01200001
*                   the BRIF, VIIF or EDIF services.                  * 01210001
*                   Possible values are F, FA, FM, V, VA, VM, or U.   * 01220001
*                   The default value is V.                           * 01230001
*                                                                     * 01240001
*         profile   the 8-char name of the profile that should be     * 01250001
*                   used by VIIF and EDIF when the VIEW or EDIT       * 01260001
*                   services are requested.                           * 01270001
*                   The default value is TEXT.                        * 01280001
*                                                                     * 01290001
* R208    varl      form of the variable list, if varname is *.       * 01300001
* R208              Can be S for short (=39 char) or L for long       * 01310001
* R208              (=255 char) varnames.                             * 01320001
*                                                                     * 01330001
*    Examples:                                                        * 01340001
*                                                                     * 01350001
*         Call the STEMEDIT routine to display the output of the      * 01360001
*         TSO "LISTCAT" command.  The variables to display            * 01370001
*         begin with the characters "LINE.":                          * 01380001
*                                                                     * 01390001
*            CALL OUTTRAP 'LINE.'                                     * 01400001
*            "LISTCAT"                                                * 01410001
*            CALL STEMEDIT 'BROWSE','LINE.',,,'List Catalog'          * 01420001
*                                                                     * 01430001
*         QUEUE JCL to the data stack and call the STEMEDIT           * 01440001
*         routine to VIEW it:                                         * 01450001
*                                                                     * 01460001
*            "MAKEBUF"                                                * 01470001
*            QUEUE '//MYJOB JOB 12345,CLASS=A'                        * 01480001
*            QUEUE '//STEP2 EXEC PGM=IEFBR14'                         * 01490001
*            CALL STEMEDIT 'VIEW',,,,'Sample JCL'                     * 01500001
*            "DROPBUF"                                                * 01510001
*                                                                     * 01520001
* RETURN-CODES = See below                                            * 01530001
*                                                                     * 01540001
*        The STEMEDIT function returns a return code that indicates   * 01550001
*        whether the display worked.  The returned value is           * 01560001
*        contained in the RC special variable.                        * 01570001
*                                                                     * 01580001
*        The following STEMEDIT return code values are possible:      * 01590001
*                                                                     * 01600001
*        0    The display was successful.                             * 01610001
*                                                                     * 01620001
*        4    There were no stems matching the description given in   * 01630001
*             stemname (BROWSE).  The data was not modified (EDIT).   * 01640001
*                                                                     * 01650001
*        8    Option incompatible with requested service.             * 01660001
*                                                                     * 01670001
*        12   Invalid Service requested.                              * 01680001
*                                                                     * 01690001
*        16   BRIF, VIIF or EDIF failed.                              * 01700001
*                                                                     * 01710001
* USAGE NOTES = See below                                             * 01720001
*                                                                     * 01730001
*        The EDIT service only works with a stem variable.            * 01740001
*        If the data is modified by the user, STEMEDIT DROPs the      * 01750001
*        stem variable, sets stem.0 to the number of records          * 01760001
*        written, copies records to the stem.1 through stem.n         * 01770001
*        where n is equal to the value of the stem.0 variable,        * 01780001
*        and sets the RC variable to 0.  If the data is not           * 01790001
*        modified by the user, STEMEDIT sets the RC variable to 4.    * 01800001
*                                                                     * 01810001
* COMPATIBILITY                                                       * 01820001
*                                                                     * 01830001
*        STEMEDIT has been designed to be compatible with             * 01840001
*        the STEMDISP function of the REXXTOOLS product from          * 01850001
*        Open Software Technologies, with the following               * 01860001
*        exceptions:                                                  * 01870001
*                                                                     * 01880001
*        1. STEMEDIT supports the BROWSE, VIEW and EDIT services      * 01890001
*           (STEMDISP only supports BROWSE).                          * 01900001
*                                                                     * 01910001
*        2. If stemcount is not specified, STEMEDIT scans             * 01920001
*           variables until an unitialised variable is found.         * 01930001
*           (STEMDISP stops after 100000 variables).                  * 01940001
*                                                                     * 01950001
*        3. STEMEDIT has the ability to retrieve data from a          * 01960001
*           stem variable or the data stack (STEMDISP can only        * 01970001
*           retrieve data from a stem variable).                      * 01980001
*                                                                     * 01990001
* CHANGE ACTIVITY                                                     * 02000001
*                                                                     * 02010001
* 100 Initial release                                            1995 * 02020001
* 101 Fix S0C4 in RDRTNE                                         1996 * 02030001
* 102 VIEW support via EDIF                                           * 02040001
* 103 Convert 2nd argument to uppercase (variable name)               * 02050001
*     Add support for 3rd and 4th arguments                           * 02060001
* 104 Change module name from STEMDISP to STEMVIEW               1997 * 02070001
*     Punch ' ALIAS STEMDISP ' for compatibility with REXXTOOLS       * 02080001
*     Change name of EDIT function to VIEW                            * 02090001
*     Issue CONTROL DISPLAY REFRESH before BROWSE/EDIT                * 02100001
*     Pass address of environment block to IRXEXCOM                   * 02110001
* 105 PULL data from the stack when no variable name specified        * 02120001
*     Prompt user before saving data in VIEW mode                     * 02130001
*     LRECL can be specified in 7th argument                          * 02140001
*     Check for missing parms to prevent S0C4                         * 02150001
*     Replace STRING macro with in-line code                          * 02160001
*     Accept SHVTRUNC as valid RC from IRXEXCOM                       * 02170001
* 106 Truncate Title                                                  * 02180001
* 107 E or V command switches from BROWSE to VIEW                1999 * 02190001
* 108 Set ZVMODET='VIEW' to show VIEW instead of EDIT on ISREDDEx     * 02200001
*     Add recfm and profile parameters for VIEW                       * 02210001
*     Display error message after BRIF/EDIF failure                   * 02220001
*     Display STEMVIEW Arguments Syntax if not invoked from REXX      * 02230001
* 201 Program name changed from STEMVIEW to STEMEDIT             2002 * 02240001
*     Use VIIF instead of EDIF (OS/390 R10 and z/OS)                  * 02250001
*     Add EDIT function for stem variables                            * 02260001
*     Maximum length of variable name increased to 255                * 02270001
*     Maximum length of data line increased to 32760                  * 02280001
* 202 Set default LRECL to 255                                   2003 * 02290001
* 203 Force default panel names - ISRBROBA/ISREDDE2              2009 * 02300001
*     Use SAVE3 in RDRTNE and WRITERTN                                * 02310001
*     Move LINE fld to own DSECT                                      * 02320001
*     When invoked for BROWSE and user issues V or E :                * 02330001
*     1. Issue CONTROL DISPLAY SAVE/RESTORE                           * 02340001
*     2. Clear Panel Name                                             * 02350001
* 204 Change X'40' to X'41' (NBSP) in TITLE                           * 02360001
* 205 Add support for ISPF V3                                         * 02370001
*     Replace LINK macro with ISPLINK                                 * 02380001
* 206 Check for empty records in RDRTN84                         2010 * 02390001
* 207 VIIF only supported in ISPF V5 and above                        * 02400001
*                                                                     * 02410001
* 208 List all Variables, stemname=*                       2013 R208  * 02420001
*     Remove ORG instruction from R206 (this had made STEMCOUNT R208  * 02430001
*     to an LASTELEMENT)                                        R208  * 02440001
*     Change at label RDRTN88 to prevent display of empty lines R208  * 02450001
*     when BROWSE is invoked with first element specified.      R208  * 02460001
*     EDIT of variables.                                        R208  * 02470001
* 208_2 Just changed ISPLINK@ to ISPLINKA to prevent       2017 R208  * 02480001
*       ASCII/EBCDIC translation problems.                      R208  * 02490001
* 209 Modification by Lionel B. Dyck                       2017 *lbd* * 02500001
*     I found a 'bug' in STEMEDIT when using the rexx bpxwunix        * 02510001
*     function to return the results of omvs commands to a stem.      * 02520001
*     The results displayed were truncated and I discovered that      * 02530001
*     there was a stem with a null value. I opened a PMR and was      * 02540001
*     told that is by design to return the data exactly the way       * 02550001
*     it is in the USS file or command results. The issue is that     * 02560001
*     STEMEDIT stopped when it encountered a null stem value (as      * 02570001
*     does EXECIO) so I make a small modification that I d like       * 02580001
*     to share - I've been using this for about a year with no        * 02590001
*     adverse impact.                                                 * 02600001
*                                                                     * 02610001
&REL     SETC  'R209'                                                 * 02620001
*********************************************************************** 02630001
         PUNCH ' ALIAS STEMDISP (compatibility with REXXTOOLS) '        02640001
         PUNCH ' ALIAS STEMVIEW (compatibility with STEMVIEW) '         02650001
STEMEDIT CSECT                                                          02660001
STEMEDIT RMODE 24                      For TPUT                         02670001
STEMEDIT AMODE 31                                                       02680001
&D       SETC  '&SYSDATE'(7,2)'-'.'&SYSDATE'(1,2)'-'.'&SYSDATE'(4,2)    02690001
         SAVE  (14,12),,'GSF Utilities - STEMEDIT &REL - 20&D &SYSTIME' 02700001
         LR    R12,R15                                                  02710001
         USING STEMEDIT,R12                                             02720001
*---------------------------------------------------------------------* 02730001
*                                                                     * 02740001
*        ALLOCATE DYNAMIC STORAGE                                     * 02750001
*                                                                     * 02760001
*---------------------------------------------------------------------* 02770001
         GETMAIN RU,LV=DYNAML,         Allocate Dynamic Storage Area   X02780001
               LOC=BELOW,              24-bit address for TPUT         X02790001
               BNDRY=PAGE                                               02800001
         ST    R13,4(,R1)                                               02810001
         ST    R1,8(,R13)                                               02820001
         LA    R14,72(,R1)             CLEAR WORKING STORAGE            02830001
         LA    R15,DYNAML-72           CLEAR WORKING STORAGE            02840001
         SLR   R1,R1                   CLEAR WORKING STORAGE            02850001
         MVCL  R14,R0                  CLEAR WORKING STORAGE            02860001
         LM    R13,R1,8(R13)           SET R13, RELOAD R1               02870001
         USING DYNAM,R13                                                02880001
         STM   R15,R1,R15R0R1          save regs for cmd rtne           02890001
         L     R11,EFPLARG-EFPL(,R1)   ADDR OF ARG LIST                 02900001
         MVI   BLANKS,C' '             a bunch of blanks                02910001
         MVC   BLANKS+1(L'BLANKS-1),BLANKS                              02920001
         MVC   TITLE,BLANKS            default title                    02930001
         MVC   PANEL_NAME,BLANKS       default panel name               02940001
         MVI   STEMCOUNT,1             default count: X'01000000'       02950001
         GETMAIN RU,LV=L'LINE+256,     Alloc Dynamic Storage Area  R208X02960001
               BNDRY=PAGE                                               02970001
         STM   R0,R1,LINE_LEN_ADDR     Save length/address              02980001
         LR    R9,R1                   Copy A(LINE)                     02990001
         USING LINE_DSECT,R9                                            03000001
*---------------------------------------------------------------------* 03010001
*                                                                     * 03020001
*        BUILD THE SHVBLOCK                                           * 03030001
*                                                                     * 03040001
*---------------------------------------------------------------------* 03050001
         LA    R10,DYNAM_SHVB                                           03060001
         USING SHVBLOCK,R10                                             03070001
         MVI   SHVCODE,SHVFETCH        FETCH VARIABLE                   03080001
         LH    R0,=Y(L'LINE)           LENGTH OF 'FETCH' VALUE BUFFER   03090001
         ST    R0,SHVBUFL              LENGTH OF 'FETCH' VALUE BUFFER   03100001
         LA    R0,255                  default lrecl for BRIF/VIIF/EDIF 03110001
         ST    R0,LRECL                default lrecl for BRIF/VIIF/EDIF 03120001
         MVC   RECFM,=C'V '            default RECFM is V               03130001
         MVC   PROFILE_NAME,=CL8'TEXT' default profile name             03140001
         LA    R0,LINE                 ADDRESS OF VALUE BUFFER          03150001
         ST    R0,SHVVALA              ADDRESS OF VALUE BUFFER          03160001
         LA    R0,VARNAME              ADDRESS OF VARIABLE NAME         03170001
         ST    R0,SHVNAMA              ADDRESS OF VARIABLE NAME         03180001
         L     R15,ADDR_OF_ENVBLOCK    Environment block                03190001
         CLC   =C'ENVBLOCK',0(R15)     Invoked from REXX?               03200001
         BNE   NOREXX                  no, quit                         03210001
         L     R15,ENVBLOCK_IRXEXTE-ENVBLOCK(,R15) A(IRXEXTE)           03220001
         L     R15,IRXEXCOM-IRXEXTE(,R15)          A(IRXEXCOM)          03230001
         L     R0,ADDR_OF_ENVBLOCK     ENVIRONMENT BLOCK                03240001
         LA    R1,IRXEXCOM_PARM        parm list                        03250001
         STM   R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)       03260001
         LA    R14,=C'IRXEXCOM'        Shared Variable Routine          03270001
         SLR   R15,R15                 PARM2=0                          03280001
         SLR   R0,R0                   PARM3=0                          03290001
         LA    R1,SHVBLOCK             PARM4                            03300001
         STM   R14,R1,IRXEXCOM_PARM    build parm list for IRXEXCOM     03310001
         OI    IRXEXCOM_PARM+12,X'80'  VL=1                             03320001
*---------------------------------------------------------------------* 03330001
         MACRO                                                    macro 03340001
&NAME    ISPLINK &OPRNDS,&ERRET=                                  macro 03350001
         GBLB  &IHBSWA                                            macro 03360001
&IHBSWA  SETB  1                       VL=1                       macro 03370001
&NAME    LA    R1,PARMLIST             parm list                  macro 03380001
         IHBOPLST ,&OPRNDS,MF=(E,(1))                             macro 03390001
         L     R15,ISPLINKA            ISPLINK bootstrap                03400001
         BALR  R14,R15                 invoke ISPLINK                   03410001
         AIF   (T'&ERRET EQ 'O').MEND                             macro 03420001
         LTR   R15,R15                 Any error?                       03430001
         BNZ   &ERRET                  yes, jump                        03440001
.MEND    MEND                                                     macro 03450001
*---------------------------------------------------------------------* 03460001
*                                                                     * 03470001
*        PROCESS ARGUMENTS                                            * 03480001
*                                                                     * 03490001
*---------------------------------------------------------------------* 03500001
         LOAD  EP=ISPLINK              preload ISPLINK                  03510001
         ST    R0,ISPLINKA             A(ISPLINK)                       03520001
         LA    R0,L'ZENVIR                                              03530001
         ST    R0,DWD                                                   03540001
         ISPLINK ($VCOPY,$ZENVIR,DWD,ZENVIR,$MOVE)                      03550001
*                                                                       03560001
* Set VAR1 to Blank for further compares                           R208 03570001
         MVI   VAR1,C' '                                           R208 03580001
* Set VARL to 'S' for further compares                             R208 03590001
         MVI   VARL,C'S'                                           R208 03600001
*                                                                       03610001
         LM    R2,R3,8*1-8(R11)        1st ARG (BROWSE/EDIT)            03620001
         LTR   R3,R3                   service specified?               03630001
         BNP   ARG1N                   no, error                        03640001
         CH    R3,=AL2(L'SERVICE)      name too long?                   03650001
         BH    ARG1N                   yes, error                       03660001
         BCTR  R3,0                    prepare "EX"                     03670001
         MVC   SERVICE(*-*),0(R2)      move string                      03680001
         EX    R3,*-6                  execute MVC                      03690001
         OC    SERVICE,BLANKS          convert to uppercase             03700001
*                                                                       03710001
         CLI   ZENVIR+5,C'4'           ISPF V4 or above ?               03720001
         BL    ARG1G                   no, keep blank panel name        03730001
         MVC   PANEL_NAME,=C'ISRBROBA' default panel name (BROWSE)      03740001
ARG1G    EQU   *                                                        03750001
         CLC   =C'BROWSE',SERVICE      BROWSE?                          03760001
         BE    ARG1X                   yes, exit                        03770001
         CLI   ZENVIR+5,C'4'           ISPF V4 or above ?               03780001
         BL    ARG1J                   no, keep blank panel name        03790001
         MVC   PANEL_NAME,=C'ISREDDE2' default panel name (VIEW/EDIT)   03800001
ARG1J    EQU   *                                                        03810001
         CLC   =C'VIEW  ',SERVICE      VIEW?                            03820001
         BE    ARG1X                   yes, exit                        03830001
         CLC   =C'EDIT  ',SERVICE      EDIT?                            03840001
         BE    ARG1X                   yes, exit                        03850001
ARG1N    EQU   *                       bad service specified            03860001
         B     EXIT12                  no service, exit with RC=12      03870001
ARG1X    EQU   *                                                        03880001
*                                                                       03890001
         LM    R2,R3,8*2-8(R11)        2ND ARG (VAR NAME)               03900001
         STM   R2,R3,STEMNAME          2ND ARG (VAR NAME)               03910001
         LTR   R3,R3                   stemname specified?              03920001
         BNP   ARG2N                   no, jump                         03930001
         MVC   VAR1,0(R2)              first char of varname       R208 03940001
         OI    0(R2),X'40'             convert to uppercase             03950001
         LA    R2,1(,R2)               convert to uppercase             03960001
         BCT   R3,*-8                  convert to uppercase             03970001
         CLI   VAR1,C'*'               is varname '*' ?            R208 03980001
         BE    ARG2RN                  yes, go to ARG2RN           R208 03990001
         B     ARG2X                                                    04000001
ARG2N    EQU   *                       no stemname specified            04010001
         CLI   SERVICE,C'B'            SERVICE=BROWSE?                  04020001
         BE    EXIT8                   yes, exit with RC=8              04030001
         CLI   SERVICE,C'E'            SERVICE=EDIT?                    04040001
         BE    EXIT8                   yes, exit with RC=8              04050001
         LA    R14,=CL8'PULL'          FUNCTION                         04060001
         LA    R15,SHVVALA             ADDRESS OF DATA RETURNED         04070001
         LA    R0,SHVVALL              LENGTH OF DATA RETURNED          04080001
         LA    R1,VALUE                VALUE RETURNED BY IRXSTK         04090001
         LA    R2,ADDR_OF_ENVBLOCK     Environment block                04100001
         LA    R3,RETCODE              RETURN CODE                      04110001
         STM   R14,R3,IRXSTK_PARM      BUILD PARM LIST                  04120001
         OI    IRXSTK_PARM+20,X'80'    BUILD PARM LIST                  04130001
         B     ARG2X                   Jump over ARG2RN            R208 04140001
ARG2RN   EQU   *                                                   R208 04150001
         CLI   SERVICE,C'B'            SERVICE=BROWSE?             R208 04160001
         BE    EXIT8                   yes, exit with RC=8         R208 04170001
         MVI   SHVCODE,SHVNEXTV        FETCH NEXT VARIABLE         R208 04180001
ARG2X    EQU   *                                                        04190001
*                                                                       04200001
         LM    R2,R3,8*3-8(R11)        3rd ARG (first element)          04210001
         LTR   R3,R3                   zero length?                     04220001
         BZ    ARG3X                   yes, jump                        04230001
         BM    ARG10X                  eof, exit                   R208 04240001
         BCTR  R3,0                    decrement                        04250001
         PACK  DWD,0(,R2)              *executed*                       04260001
         EX    R3,*-6                  pack the value                   04270001
         CVB   R0,DWD                  make it binary                   04280001
         BCTR  R0,0                    relative to zero                 04290001
         ST    R0,CURRECNO             save it for later                04300001
ARG3X    EQU   *                                                        04310001
*                                                                       04320001
         LM    R2,R3,8*4-8(R11)        4th ARG (stem count)             04330001
         LTR   R3,R3                   zero length?                     04340001
         BZ    ARG4X                   yes, jump                        04350001
         BM    ARG10X                  eof, exit                   R208 04360001
         BCTR  R3,0                    decrement                        04370001
         PACK  DWD,0(,R2)              *executed*                       04380001
         EX    R3,*-6                  pack the value                   04390001
         CVB   R0,DWD                  make it binary                   04400001
         AL    R0,CURRECNO             add origin                       04410001
*        ORG   *-4                                                 R208 04420001
         ST    R0,STEMCOUNT            save it for later                04430001
ARG4X    EQU   *                                                        04440001
*                                                                       04450001
         LM    R2,R3,8*5-8(R11)        5TH ARG (TITLE)                  04460001
         LTR   R3,R3                   zero length?                     04470001
         BZ    ARG5X                   yes, jump                        04480001
         BM    ARG10X                  eof, exit                   R208 04490001
         LA    R1,TITLE                start of output area             04500001
         CH    R3,=Y(L'TITLE)          title too long?                  04510001
         BNH   ARG5M                   no, jump                         04520001
         LH    R3,=Y(L'TITLE)          yes, truncate it                 04530001
*LOOP                                                                   04540001
ARG5M    MVC   0(1,R1),0(R2)           move one character               04550001
         CLI   0(R1),X'40'             X'40' -> X'41' (NBSP)            04560001
         BNE   *+8                     X'40' -> X'41' (NBSP)            04570001
         MVI   0(R1),X'41'             X'40' -> X'41' (NBSP)            04580001
         LA    R1,1(,R1)               next output char                 04590001
         LA    R2,1(,R2)               next input char                  04600001
         BCT   R3,ARG5M                move title, one char at a time   04610001
*ENDLOOP                                                                04620001
ARG5X    EQU   *                                                        04630001
*                                                                       04640001
         LM    R2,R3,8*6-8(R11)        6TH ARG (PANEL)                  04650001
         LTR   R2,R2                   SPECIFIED?                       04660001
         BZ    ARG6X                   no, jump                         04670001
         BM    ARG10X                  eof, exit                   R208 04680001
         BCTR  R3,0                    prepare "EX"                     04690001
         MVC   PANEL_NAME(*-*),0(R2)   move string                      04700001
         EX    R3,*-6                  execute MVC                      04710001
ARG6X    EQU   *                                                        04720001
*                                                                       04730001
         LM    R2,R3,8*7-8(R11)        7th ARG (lrecl)                  04740001
         LTR   R3,R3                   zero length?                     04750001
         BZ    ARG7X                   yes, jump                        04760001
         BM    ARG10X                  eof, exit                   R208 04770001
         BCTR  R3,0                    decrement                        04780001
         PACK  DWD,0(,R2)              *executed*                       04790001
         EX    R3,*-6                  pack the value                   04800001
         CVB   R0,DWD                  make it binary                   04810001
         ST    R0,LRECL                save it for later                04820001
         CH    R0,=Y(L'LINE)           lrecl too big?                   04830001
         BH    EXIT8                   yes, exit with RC=8              04840001
ARG7X    EQU   *                                                        04850001
*                                                                       04860001
         LM    R2,R3,8*8-8(R11)        8TH ARG (recfm)                  04870001
         LTR   R2,R2                   SPECIFIED?                       04880001
         BZ    ARG8X                   no, jump                         04890001
         BM    ARG10X                  eof, exit                   R208 04900001
         CLI   SERVICE,C'B'            SERVICE=BROWSE?                  04910001
         BE    EXIT8                   yes, exit with RC=8              04920001
         CH    R3,=Y(L'RECFM)          too long?                        04930001
         BH    EXIT8                   yes, exit with RC=8              04940001
         BCTR  R3,0                    prepare "EX"                     04950001
         MVC   RECFM(*-*),0(R2)        move string                      04960001
         EX    R3,*-6                  execute MVC                      04970001
         OC    RECFM,BLANKS            upper-case                       04980001
ARG8X    EQU   *                                                        04990001
*                                                                       05000001
         LM    R2,R3,8*9-8(R11)        9TH ARG (profile)                05010001
         LTR   R2,R2                   SPECIFIED?                       05020001
         BZ    ARG9X                   no, jump                         05030001
         BM    ARG10X                  eof, exit                   R208 05040001
         CLI   SERVICE,C'B'            SERVICE=BROWSE?                  05050001
         BE    EXIT8                   yes, exit with RC=8              05060001
         CH    R3,=Y(L'PROFILE_NAME)   too long?                        05070001
         BH    EXIT8                   yes, exit with RC=8              05080001
         BCTR  R3,0                    prepare "EX"                     05090001
         MVC   PROFILE_NAME(*-*),0(R2) move string                      05100001
         EX    R3,*-6                  execute MVC                      05110001
*                                                                       05120001
ARG9X    EQU   *                       S or L                      R208 05130001
*                                                                  R208 05140001
         LM    R2,R3,8*10-8(R11)       10TH ARG (S or L)           R208 05150001
         LTR   R2,R2                   SPECIFIED?                  R208 05160001
         BZ    ARG10X                  no, jump                    R208 05170001
         BM    ARG10X                  eof, exit                   R208 05180001
         CLI   SERVICE,C'B'            SERVICE=BROWSE?             R208 05190001
         BE    EXIT8                   yes, exit with RC=8         R208 05200001
         MVC   VARL,0(R2)              first char of varlistform   R208 05210001
         OC    VARL,BLANKS             convert to uppercase        R208 05220001
*                                                                       05230001
ARG10X   EQU   *                       end of arg list             R208 05240001
*                                                                       05250001
*---------------------------------------------------------------------* 05260001
*                                                                     * 05270001
*        Invoke BRIF, VIIF or EDIF Services                           * 05280001
*                                                                     * 05290001
*---------------------------------------------------------------------* 05300001
         ISPLINK ($CONTROL,$ERRORS,$RETURN) CONTROL ERRORS RETURN       05310001
         ISPLINK ($CONTROL,$DISPLAY,$REFRESH) CONTROL DISPLAY REFRESH   05320001
         LA    R0,SAVE2                PARM FOR READ ROUTINE            05330001
         ST    R0,SAVE2                PARM FOR READ ROUTINE            05340001
         LA    R2,RDRTNE               READ ROUTINE                     05350001
         LA    R3,CMDRTNE              COMMAND ROUTINE                  05360001
         LA    R4,WRITERTN             WRITE ROUTINE                    05370001
         STM   R2,R4,RDCMDWR+0         READ,CMD,WRITE                   05380001
         CLI   SERVICE,C'V'            SERVICE=VIEW?                    05390001
         BE    VIIF                    yes, jump                        05400001
         CLI   SERVICE,C'E'            SERVICE=EDIT?                    05410001
         BE    EDIF                    yes, jump                        05420001
         ISPLINK (=C'BRIF',            ISPF SERVICE                    X05430001
               TITLE,                  DSNAME                          X05440001
               RECFM,                  RECFM                           X05450001
               LRECL,                  LRECL                           X05460001
               RDCMDWR+0,              READ ROUTINE                    X05470001
               RDCMDWR+4,              COMMAND ROUTINE                 X05480001
               SAVE2,                  PARM FOR READ ROUTINE           X05490001
               PANEL_NAME)             PANEL (ISRBROBF/ISRBROBA)        05500001
         CH    R15,=H'12'              empty data set?                  05510001
         BNE   GOBACK                  no, jump                         05520001
         LA    R7,4                    yes, RC=4 "no data to browse"    05530001
         B     GOBACK40                                                 05540001
VIIF     EQU   *                                                        05550001
         CLI   ZENVIR+5,C'5'           ISPF V5 or above ?               05560001
         BL    EDIF                    no, use EDIF instead of VIIF     05570001
         ISPLINK (=C'VIIF',            ISPF SERVICE                    X05580001
               TITLE,                  DSNAME                          X05590001
               PROFILE_NAME,           PROFILE NAME                    X05600001
               RECFM,                  RECFM                           X05610001
               LRECL,                  LRECL                           X05620001
               RDCMDWR+0,              READ ROUTINE                    X05630001
               0,                      COMMAND EXIT                    X05640001
               SAVE2,                  PARM FOR READ ROUTINE           X05650001
               0,                      Edit Length                     X05660001
               PANEL_NAME)             PANEL (ISREDDE2/ISREDDE3)        05670001
         B     GOBACK                                                   05680001
EDIF     EQU   *                                                        05690001
         ISPLINK (=C'EDIF',            ISPF SERVICE                    X05700001
               TITLE,                  DSNAME                          X05710001
               PROFILE_NAME,           PROFILE NAME                    X05720001
               RECFM,                  RECFM                           X05730001
               LRECL,                  LRECL                           X05740001
               RDCMDWR+0,              READ ROUTINE                    X05750001
               RDCMDWR+8,              WRITE ROUTINE                   X05760001
               0,                      COMMAND EXIT                    X05770001
               SAVE2,                  PARM FOR READ ROUTINE           X05780001
               0,                      Edit Length                     X05790001
               PANEL_NAME)             PANEL (ISREDDE2/ISREDDE3)        05800001
         LTR   R7,R15                  OK?                              05810001
         BZ    GOBACK40                yes, jump                        05820001
         CH    R7,=H'4'                Data Modified?                   05830001
         BE    GOBACK40                no, exit with RC=4               05840001
*---------------------------------------------------------------------* 05850001
*                                                                     * 05860001
*        Set return code                                              * 05870001
*                                                                     * 05880001
*---------------------------------------------------------------------* 05890001
GOBACK   EQU   *                                                        05900001
         LTR   R7,R15                  OK?                              05910001
         BZ    GOBACK40                yes, jump                        05920001
         CH    R7,=H'4'                Severe error in BRIF/VIIF/EDIF?  05930001
         BH    GOBACK16                yes, RC=16                       05940001
         SLR   R7,R7                   no, RC=0                         05950001
         B     GOBACK40                                                 05960001
*                                                                       05970001
*        BRIF/VIIF/EDIF error: display error message                    05980001
*                                                                       05990001
GOBACK16 LA    R7,1000(,R7)            RC=10nn: rc nn from BRIF/VIIF    06000001
         LA    R0,L'ZERRMSG            max length                       06010001
         ST    R0,DWD                  max length                       06020001
         ISPLINK ($VCOPY,$ZERRMSG,DWD,ZERRMSG,$MOVE),                  X06030001
               ERRET=GOBACK40          No MSG, skip SETMSG              06040001
         ISPLINK ($SETMSG,ZERRMSG)                                      06050001
*---------------------------------------------------------------------* 06060001
*                                                                     * 06070001
*        Pass return code in RC variable                              * 06080001
*                                                                     * 06090001
*---------------------------------------------------------------------* 06100001
GOBACK40 EQU   *                                                        06110001
         LA    R0,WORK80               ADDRESS OF VALUE BUFFER          06120001
         ST    R0,SHVVALA              ADDRESS OF VALUE BUFFER          06130001
         CVD   R7,DWD                  convert to decimal               06140001
         OI    DWD+7,15                convert to decimal               06150001
         UNPK  WORK80(5),DWD           convert to decimal               06160001
         LA    R15,5                   LENGTH OF VARIABLE NAME          06170001
         ST    R15,SHVVALL             length                           06180001
         MVC   VARNAME(2),=C'RC'       variable name                    06190001
         LA    R15,2                   LENGTH OF VARIABLE NAME          06200001
         ST    R15,SHVNAML             LENGTH OF VARIABLE NAME          06210001
         LA    R0,VARNAME              ADDRESS OF VARIABLE NAME    R208 06220001
         ST    R0,SHVNAMA              ADDRESS OF VARIABLE NAME    R208 06230001
         MVI   SHVCODE,SHVSTORE        STORE VARIABLE                   06240001
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)       06250001
         BALR  R14,R15              <- Store REXX variable "RC"         06260001
         SLR   R7,R7                   RC=0                             06270001
         B     EXIT                                                     06280001
*---------------------------------------------------------------------* 06290001
*                                                                     * 06300001
*        STEMEDIT was not invoked from a REXX exec                    * 06310001
*        Display argument syntax using TPUT                           * 06320001
*                                                                     * 06330001
*---------------------------------------------------------------------* 06340001
NOREXX   EQU   *                                                        06350001
         TPUT  SYNTAXMSG,L'SYNTAXMSG   display syntax                   06360001
         LA    R7,20                   RC=20                            06370001
         B     EXIT                                                     06380001
*---------------------------------------------------------------------* 06390001
*                                                                     * 06400001
*        CLEAN-UP AND EXIT                                            * 06410001
*                                                                     * 06420001
*---------------------------------------------------------------------* 06430001
EXIT8    LA    R7,8                    RC=8 Option incompat w/service   06440001
         B     EXIT                                                     06450001
EXIT12   LA    R7,12                   RC=12 Invalid Service            06460001
*                                                                       06470001
EXIT     LM    R0,R1,LINE_LEN_ADDR     Load length/address              06480001
         FREEMAIN RU,LV=(R0),A=(R1)    Free Dynamic Storage Area        06490001
         LR    R1,R13                  A(DYNAM)                         06500001
         L     R13,4(,R13)                                              06510001
         FREEMAIN RU,LV=DYNAML,A=(R1)  Free Dynamic Storage Area        06520001
         LR    R15,R7                  pass return code                 06530001
         RETURN (14,12),RC=(15)                                         06540001
         DROP                                                           06550001
*********************************************************************** 06560001
*                                                                     * 06570001
*        BRIF Command Routine                                         * 06580001
*                                                                     * 06590001
*        This routine is invoked by BRIF each time a command is       * 06600001
*        entered on the BROWSE screen.  If the user enters the E      * 06610001
*        or V command, then STEMEDIT reinvokes itself with VIEW       * 06620001
*        instead of BROWSE.                                           * 06630001
*                                                                     * 06640001
*********************************************************************** 06650001
CMDRTNE  SAVE  (14,12),,*                                               06660001
         LR    R12,R15                                                  06670001
         USING CMDRTNE,R12                                              06680001
         LR    R14,R13                 CALLER'S SAVE AREA               06690001
         L     R13,04(,R1)             PTR TO DIALOG DATA AREA          06700001
         L     R13,0(,R13)             A(SAVE2)                         06710001
         ST    R14,4(,R13)             CHAIN SAVE AREAS                 06720001
         ST    R13,8(,R14)             CHAIN SAVE AREAS                 06730001
         USING SAVE2,R13                                                06740001
         L     R6,00(,R1)              Function Code                    06750001
         L     R9,LINE_LEN_ADDR+4      A(LINE)                          06760001
         USING LINE_DSECT,R9                                            06770001
         CLC   =F'20',0(R6)            UNKNOWN COMMAND?                 06780001
         BNE   CMDRTNE4                NO, EXIT                         06790001
         LA    R0,L'WORK80             max length of variable           06800001
         ST    R0,DWD                  max length of variable           06810001
         ISPLINK ($VCOPY,$ZCMD,DWD,WORK80,$MOVE)                        06820001
         OC    WORK80(2),BLANKS        upper-case                       06830001
         CLC   =C'E ',WORK80           ZCMD="E" ?                       06840001
         BE    CMDRTNE7                yes, do it                       06850001
         CLC   =C'V ',WORK80           ZCMD="V" ?                       06860001
         BE    CMDRTNE7                yes, do it                       06870001
CMDRTNE4 L     R13,4(,R13)             BRIF SAVE AREA                   06880001
         RETURN (14,12),RC=4           ISPF will process the command    06890001
*                                                                       06900001
*        Invoke VIEW when user enters V or E during BROWSE display      06910001
*                                                                       06920001
CMDRTNE7 EQU   *                                                        06930001
         ISPLINK ($CONTROL,$DISPLAY,$SAVE) CONTROL DISPLAY SAVE         06940001
*                                                                       06950001
         LM    R15,R1,R15R0R1          restore regs at entry            06960001
         L     R11,EFPLARG-EFPL(,R1)   ADDR OF ARG LIST                 06970001
         LA    R2,$VIEW                service=VIEW                     06980001
         LA    R3,L'$VIEW              length                           06990001
         STM   R2,R3,0(R11)            update service name              07000001
         SLR   R2,R2                   R2=0                             07010001
         SLR   R3,R3                   R3=0                             07020001
         STM   R2,R3,8*6-8(R11)        6TH ARG (PANEL)                  07030001
         BALR  R14,R15              <- re-invoke myself for VIEW        07040001
*                                                                       07050001
         ISPLINK ($CONTROL,$DISPLAY,$RESTORE) CONTROL DISPLAY RESTORE   07060001
*                                                                       07070001
         L     R13,4(,R13)             BRIF SAVE AREA                   07080001
         RETURN (14,12),RC=0           command processed                07090001
         DROP                                                           07100001
*********************************************************************** 07110001
*                                                                     * 07120001
*        BRIF/VIIF READ Routine                                       * 07130001
*                                                                     * 07140001
*        This routine is invoked by BRIF and VIIF to                  * 07150001
*        return the address of a record.                              * 07160001
*                                                                     * 07170001
*********************************************************************** 07180001
RDRTNE   SAVE  (14,12),,*                                               07190001
         LR    R12,R15                                                  07200001
         USING RDRTNE,R12                                               07210001
         LR    R14,R13                 CALLER'S SAVE AREA               07220001
         L     R13,12(,R1)             PTR TO DIALOG DATA AREA          07230001
         L     R13,0(,R13)             A(SAVE2)                         07240001
         LA    R13,SAVE3-SAVE2(,R13)   A(SAVE3)                         07250001
         ST    R14,4(,R13)             CHAIN SAVE AREAS                 07260001
         ST    R13,8(,R14)             CHAIN SAVE AREAS                 07270001
         USING SAVE3,R13                                                07280001
         L     R6,00(,R1)              RECORD DATA READ                 07290001
         L     R7,04(,R1)              LENGTH                           07300001
         LTR   R7,R7                   * test for zero length     *lbd* 07310001
         BNZ   RDRTNENZ                * not zero                 *lbd* 07320001
         LA    R7,1                    * set to length of 1       *lbd* 07330001
RDRTNENZ EQU   *                                                  *lbd* 07340001
         L     R4,08(,R1)              RELATIVE RECORD NUMBER           07350001
         L     R9,LINE_LEN_ADDR+4      A(LINE)                          07360001
         USING LINE_DSECT,R9                                            07370001
         CLI   SERVICE,C'V'            VIIF?                            07380001
         BE    RDRTNE06                YES, JUMP                        07390001
         CLI   SERVICE,C'E'            EDIF?                            07400001
         BE    RDRTNE06                YES, JUMP                        07410001
         L     R5,0(,R4)               LINE NUMBER REQUESTED BY BRIF    07420001
         AL    R5,CURRECNO             add first element (4th arg)      07430001
         B     RDRTNE07                                                 07440001
RDRTNE06 EQU   *                                                        07450001
         LA    R5,1                    NEXT LINE FOR EDIT               07460001
         AL    R5,CURRECNO             RECORD NUMBER                    07470001
         ST    R5,CURRECNO             RECORD NUMBER                    07480001
RDRTNE07 EQU   *                                                        07490001
*                                                                       07500001
         LA    R10,DYNAM_SHVB                                           07510001
         USING SHVBLOCK,R10                                             07520001
         CL    R5,STEMCOUNT            end reached?                     07530001
         BH    RDRTN79                 yes, exit with RC=8              07540001
         CLI   SHVRET,SHVLVAR          last variable to fetch?     R208 07550001
         BE    RDRTN79                 yes, exit with RC=8         R208 07560001
*                                                                       07570001
*        Retrieve value of current variable                             07580001
*                                                                       07590001
         BAL   R14,FETCHVAR         <- retrieve stemmed variable        07600001
         CLI   SHVRET,SHVCLEAN         OK?                              07610001
         BE    RDRTN70                 yes, pass line to BRIF           07620001
         CLI   SHVRET,SHVTRUNC         truncated value?                 07630001
         BE    RDRTN70                 yes, pass line to BRIF           07640001
         CLI   SHVRET,SHVNEWV          this variable exists?            07650001
         BE    RDRTN80                 NO, EXIT                         07660001
*                                                                       07670001
*        If IRXEXCOM fails, display R15 and SHVRET values.              07680001
*                                                                       07690001
         MVC   LINE(L'VARNAME),VARNAME move variable name               07700001
         L     R1,SHVNAML              length of variable name          07710001
         LA    R2,LINE(R1)             length of variable name          07720001
         MVC   0(5,R2),=C' R15='       move literal                     07730001
         CVD   R15,DWD                 save return code                 07740001
         OI    DWD+7,15                convert to decimal               07750001
         UNPK  5(3,R2),DWD             move return code: R15=008        07760001
         MVC   8(8,R2),=C',SHVRET='    move literal                     07770001
         UNPK  16(3,R2),SHVRET(2)      hex display                      07780001
         TR    16(2,R2),HEXTAB-240     hex display                      07790001
         LA    R15,18(,R1)             data length                      07800001
         ST    R15,SHVVALL             length                           07810001
*                                                                       07820001
*        Return value of variable                                       07830001
*                                                                       07840001
RDRTN70  L     R0,SHVVALA              DATA ADDRESS                     07850001
         L     R1,SHVVALL              DATA LENGTH                      07860001
         CLI   VAR1,C'*'               Fetch all vars?             R208 07870001
         BNE   RDRTN72                 No, jump over next lines    R208 07880001
         CLI   VARL,C'L'               Show long var name?         R208 07890001
         BE    RDRTN71L                yes, jump over next lines   R208 07900001
         MVI   LVARN,C' '              Clear LVARN                 R208 07910001
         MVC   LVARN+1(39),LVARN                                   R208 07920001
         L     R3,SHVNAML              length of variable name     R208 07930001
         CL    R3,=F'39'               var name longer than 39?    R208 07940001
         BH    RDRTN71                 if longer jump              R208 07950001
         BCTR  R3,0                    prepare "EX"                R208 07960001
         MVC   LVARN(*-*),VARNAME      move variable name          R208 07970001
         EX    R3,*-6                  execute MVC                 R208 07980001
         B     RDRTN71E                                            R208 07990001
RDRTN71  EQU   *                                                   R208 08000001
         MVC   LVARN(38),VARNAME       move variable name          R208 08010001
         MVI   LVARN+38,C'*'           move * to end of var name   R208 08020001
RDRTN71E EQU   *                                                   R208 08030001
         MVI   LVARN+39,C'='           move = after var name       R208 08040001
         LA    R3,40                   R3=40                       R208 08050001
         LA    R14,LINE                "to" address                R208 08060001
         L     R15,LRECL               "to" length                 R208 08070001
         SR    R15,R3                  length - 40                 R208 08080001
         MVCL  R14,R0                  move data to LINE           R208 08090001
         LA    R0,LINEA                DATA ADDRESS incl. varname  R208 08100001
         L     R1,LRECL                DATA LENGTH                 R208 08110001
         B     RDRTN72                 jump over next lines        R208 08120001
RDRTN71L EQU   *                                                   R208 08130001
         MVI   LVARNL,C' '             Clear LVARNL                R208 08140001
         MVC   LVARNL+1(255),LVARNL                                R208 08150001
         L     R3,SHVNAML              length of variable name     R208 08160001
         CL    R3,=F'255'              var name longer than 255?   R208 08170001
         BH    RDRTN71M                if longer jump              R208 08180001
         BCTR  R3,0                    prepare "EX"                R208 08190001
         MVC   LVARNL(*-*),VARNAME     move variable name          R208 08200001
         EX    R3,*-6                  execute MVC                 R208 08210001
         B     RDRTN71N                                            R208 08220001
RDRTN71M EQU   *                                                   R208 08230001
         MVC   LVARNL(254),VARNAME     move variable name          R208 08240001
         MVI   LVARNL+254,C'*'         move * to end of var name   R208 08250001
RDRTN71N EQU   *                                                   R208 08260001
         MVI   LVARNL+255,C'='         move = after var name       R208 08270001
         LA    R3,256                  R3=256                      R208 08280001
         LA    R14,LINE                "to" address                R208 08290001
         L     R15,LRECL               "to" length                 R208 08300001
         SR    R15,R3                  length - 256                R208 08310001
         MVCL  R14,R0                  move data to LINE           R208 08320001
         LA    R0,LINEAL               DATA ADDRESS incl. varname  R208 08330001
         L     R1,LRECL                DATA LENGTH                 R208 08340001
RDRTN72  EQU   *                                                   R208 08350001
         CLI   RECFM,C'F'              RECFM=F?                         08360001
         BNE   RDRTN74                 no, jump                         08370001
         CL    R1,LRECL                needs padding?                   08380001
         BNL   RDRTN74                 no, jump                         08390001
         LA    R14,LINE                "to" address                     08400001
         L     R15,LRECL               "to" length                      08410001
         ICM   R1,B'1000',BLANKS       padding                          08420001
         MVCL  R14,R0                  move data to LINE                08430001
         LA    R0,LINE                 DATA ADDRESS                     08440001
         L     R1,LRECL                DATA LENGTH                      08450001
RDRTN74  EQU   *                                                        08460001
         ST    R0,0(,R6)               PASS DATA ADDRESS                08470001
         ST    R1,0(,R7)               PASS DATA LENGTH                 08480001
         ST    R5,LASTLINE             CURRENT LINE NUMBER              08490001
         L     R13,4(,R13)             BRIF SAVE AREA                   08500001
         RETURN (14,12),RC=0           GOBACK TO EDIT                   08510001
*---------------------------------------------------------------------* 08520001
*                                                                     * 08530001
*        Scan variables to find the highest one                       * 08540001
*                                                                     * 08550001
*        This section determines the number of the last line and      * 08560001
*        passes it to BRIF/VIIF/EDIF along with the EOF indicator.    * 08570001
*                                                                     * 08580001
*---------------------------------------------------------------------* 08590001
RDRTN79  L     R5,STEMCOUNT            eof                              08600001
         B     RDRTN81                                                  08610001
RDRTN80  BCTR  R5,0                    previous line                    08620001
RDRTN81  EQU   *                                                        08630001
         CL    R5,LASTLINE             was good?                        08640001
         BE    RDRTN88                 yes, exit                        08650001
         L     R5,LASTLINE             previous line                    08660001
*loop                                                                   08670001
RDRTN84  LA    R5,1(,R5)               BUMP LINE NUMBER                 08680001
         CL    R5,STEMCOUNT            end reached?                     08690001
         BH    RDRTN87                 yes, exit with RC=8              08700001
         CLI   SHVRET,SHVLVAR          last variable to fetch?     R208 08710001
         BE    RDRTN87                 yes, exit with RC=8         R208 08720001
         BAL   R14,FETCHVAR         <- retrieve stemmed variable        08730001
*check for empty variable generally created with:  stem. = ' '          08740001
         OC    SHVVALL,SHVVALL         length=0 ?                       08750001
         BZ    RDRTN87                 yes, exit                        08760001
         CLI   SHVRET,SHVCLEAN         OK?                              08770001
         BE    RDRTN84                 yes, try next variable           08780001
*endloop                                                                08790001
RDRTN87  BCTR  R5,0                    previous line                    08800001
         ST    R5,LASTLINE             save number of last line         08810001
*RDRTN88  ST    R5,0(,R4)               LAST LINE                       08820001
*         L     R13,4(,R13)             BRIF SAVE AREA                  08830001
*         RETURN (14,12),RC=8           GOBACK TO BRIF (EOF)            08840001
RDRTN88  EQU   *                                                   R208 08850001
         CLI   SERVICE,C'V'            VIIF?                       R208 08860001
         BE    RDRTN88V                YES, JUMP                   R208 08870001
         CLI   SERVICE,C'E'            EDIF?                       R208 08880001
         BE    RDRTN88V                YES, JUMP                   R208 08890001
         S     R5,CURRECNO             subtract 4th arg            R208 08900001
RDRTN88V EQU   *                                                   R208 08910001
         ST    R5,0(,R4)               # of lines to display       R208 08920001
         L     R13,4(,R13)             BRIF SAVE AREA              R208 08930001
         RETURN (14,12),RC=8           GOBACK TO BRIF (EOF)        R208 08940001
*---------------------------------------------------------------------* 08950001
*                                                                     * 08960001
*        Fetch value of a variable                                    * 08970001
*                                                                     * 08980001
*        1. build variable name by concatenating the stem name        * 08990001
*           (such as "LINE.") to the sequence number in R5            * 09000001
*        2. pass control to IRXEXCOM                                  * 09010001
*                                                                     * 09020001
*---------------------------------------------------------------------* 09030001
FETCHVAR LM    R2,R3,STEMNAME          2ND ARG (VAR NAME)               09040001
         LTR   R3,R3                   variable name specified?         09050001
         BNP   FETCHV50                no, PULL from stack              09060001
         CLI   VAR1,C'*'               Read all variables?         R208 09070001
         BE    FETCHV40                yes jump to FETCHV40        R208 09080001
         LR    R0,R5                   seqno                            09090001
         BAL   R15,BLDVARNM         <- build variable name              09100001
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)       09110001
         BR    R15                     FETCH VARIABLE                   09120001
*                                                                       09130001
FETCHV40 EQU   *                                                   R208 09140001
         LA    R0,255                                              R208 09150001
         ST    R0,SHVUSER              Length of varname buffer    R208 09160001
         ST    R0,SHVNAML              LENGTH OF VARIABLE NAME     R208 09170001
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)  R208 09180001
         BR    R15                     FETCH VARIABLE              R208 09190001
*                                                                       09200001
*        PULL an element from the data stack                            09210001
*                                                                       09220001
FETCHV50 LR    R2,R14                  save return address              09230001
         L     R15,ADDR_OF_ENVBLOCK    Environment block                09240001
         L     R15,ENVBLOCK_IRXEXTE-ENVBLOCK(,R15) A(IRXEXTE)           09250001
         L     R15,IRXSTK-IRXEXTE(,R15) STACK MANAGER                   09260001
         LA    R1,IRXSTK_PARM          PARM LIST                        09270001
         BALR  R14,R15              <- CALL IRXSTK                      09280001
         LTR   R15,R15                 EOF yet?                         09290001
         BZR   R2                      no, goback                       09300001
         MVI   SHVRET,SHVNEWV          yes, simulate EOF                09310001
         BR    R2                      and goback                       09320001
         DROP                                                           09330001
HEXTAB   DC    C'0123456789ABCDEF'                                      09340001
*********************************************************************** 09350001
*                                                                     * 09360001
*        Write Routine (SERVICE=EDIT)                                 * 09370001
*                                                                     * 09380001
*********************************************************************** 09390001
WRITERTN SAVE  (14,12),,*                                               09400001
         LR    R12,R15                                                  09410001
         USING WRITERTN,R12                                             09420001
         LR    R14,R13                 CALLER'S SAVE AREA               09430001
         L     R13,16(,R1)             PTR TO DIALOG DATA AREA          09440001
         L     R13,0(,R13)             A(SAVE2)                         09450001
         LA    R13,SAVE3-SAVE2(,R13)   A(SAVE3)                         09450101
         ST    R14,4(,R13)             CHAIN SAVE AREAS                 09450201
         ST    R13,8(,R14)             CHAIN SAVE AREAS                 09450301
         USING SAVE3,R13                                                09450401
         L     R6,00(,R1)              RECORD DATA                      09450501
         L     R7,04(,R1)              LENGTH                           09450601
         L     R4,08(,R1)              SOURCE/CHANGE BITS               09450701
         L     R5,12(,R1)              REQUEST CODE                     09450801
*              REQ=0                   write next record                09450901
*              REQ=1                   first write request              09451001
*              REQ=2                   last write request               09451101
*              REQ=3                   first and last write request     09451201
*              REQ=4                   no record to write (all deleted) 09451301
*                                                                       09451401
         L     R9,LINE_LEN_ADDR+4      A(LINE)                          09451501
         USING LINE_DSECT,R9                                            09451601
         LA    R10,DYNAM_SHVB                                           09451701
         USING SHVBLOCK,R10                                             09451801
         L     R5,0(,R5)               request code                     09451901
         CH    R5,=H'0'                write next record                09452001
         BE    WRTRTN40                yes, skip DROPVAR                09452101
         CH    R5,=H'2'                write last record                09452201
         BE    WRTRTN40                yes, skip DROPVAR                09452301
         CLI   VAR1,C'*'               Fetch all vars?             R208 09452401
         BE    WRTRTN40                yes, skip DROPVAR           R208 09452501
*                                                                       09452601
*        First time only: DROP stem. variables                          09452701
*                                                                       09452801
DROPVAR  LM    R2,R3,STEMNAME          2ND ARG (VAR NAME)               09452901
         ST    R3,SHVNAML              LENGTH OF VARIABLE NAME          09453001
         MVI   SHVCODE,SHVDROPV        DROP STEM VARIABLE               09453101
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)       09453201
         BALR  R14,R15              <- DROP STEM VARIABLE               09453301
*                                                                       09453401
*        Write current record to stem.nnn                               09453501
*                                                                       09453601
WRTRTN40 CH    R5,=H'4'                any record to write?             09453701
         BE    WRTRTN80                no, exit                         09453801
         MVC   SHVVALA,0(R6)           Record ADDRESS                   09453901
         MVC   SHVVALL,0(R7)           Record LENGTH                    09454001
         LA    R0,1                    count output records             09454101
         AL    R0,WRTLINUM             count output records             09454201
         ST    R0,WRTLINUM             count output records             09454301
         CLI   VAR1,C'*'               Fetch all vars?             R208 09454401
         BE    WRTRTN90                                            R208 09454501
         BAL   R15,BLDVARNM         <- build variable name              09454601
         MVI   SHVCODE,SHVSTORE        STORE VARIABLE                   09454701
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)       09454801
         BALR  R14,R15              <- STORE VARIABLE                   09454901
*                                                                       09455001
*        Last record only: set stem.0 to the number of records written  09455101
*                                                                       09455201
WRTRTN80 EQU   *                                                        09455301
         CH    R5,=H'2'                last record ?                    09455401
         BL    WRTRTN99                no, exit                         09455501
         CLI   VAR1,C'*'               Fetch all vars?             R208 09455601
         BE    WRTRTN99                yes, exit                   R208 09455701
         L     R0,WRTLINUM             count output records             09455801
         CVD   R0,DWD                  seqno                            09455901
         OI    DWD+7,15                                                 09456001
         UNPK  LINE(8),DWD             99999999                         09456101
         LA    R0,LINE                 unpack 7 digits                  09456201
         ST    R0,SHVVALA              Value addr                       09456301
         LA    R0,8                    Value length                     09456401
         ST    R0,SHVVALL              Value length                     09456501
         LM    R2,R3,STEMNAME          2ND ARG (VAR NAME)               09456601
         LA    R0,1(,R3)               add one byte for "0"             09456701
         ST    R0,SHVNAML              LENGTH OF VARIABLE NAME          09456801
         LA    R14,VARNAME             "to" addr                        09456901
         LR    R15,R3                  "to" length                      09457001
         MVCL  R14,R2                  move stem.                       09457101
         MVI   0(R14),C'0'             append a "0" : stem.0            09457201
         MVI   SHVCODE,SHVSTORE        STORE VARIABLE                   09457301
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)       09457401
         BALR  R14,R15              <- STORE stem.0 VARIABLE            09457501
         B     WRTRTN99                END                         R208 09457601
*                                                                  R208 09457701
WRTRTN90 EQU   *                                                   R208 09457801
         LA    R14,LINE                "to" address                R208 09457901
         L     R15,LRECL               "to" length                 R208 09458001
         L     R6,SHVVALA              get value address           R208 09458101
         L     R7,SHVVALL              get value length            R208 09458201
         MVCL  R14,R6                  move data to LINE           R208 09458301
         LA    R14,LINE                address of LINE             R208 09458401
         L     R7,SHVVALL              repair R7 after MVCL        R208 09458501
         LR    R15,R7                                              R208 09458601
         MVI   TAB,X'00'               fill up TAB with '00'x      R208 09458701
         MVC   TAB+1(L'TAB-1),TAB                                  R208 09458801
         MVI   TAB+92,X'04'            '*'                         R208 09458901
         XR    R2,R2                   R2 = 0                      R208 09459001
         BCTR  R15,0                   prepare "EX"                R208 09459101
         TRT   LINE(*-*),TAB           find '*'                    R208 09459201
         EX    R15,*-6                 execute TRT                 R208 09459301
         BZ    WRTRN90A                no '*', jump                R208 09459401
         SLR   R1,R14                  position of '*'             R208 09459501
         ST    R1,POSST                store position              R208 09459601
         B     WRTRN90B                jump                        R208 09459701
WRTRN90A LR    R1,R7                   max position                R208 09459801
         ST    R1,POSST                store position              R208 09459901
WRTRN90B MVI   TAB+92,X'00'            clear TAB                   R208 09460001
         MVI   TAB+64,X'04'            ' '                         R208 09460101
         XR    R2,R2                   R2 = 0                      R208 09460201
         TRT   LINE(*-*),TAB           find ' '                    R208 09460301
         EX    R15,*-6                 execute TRT                 R208 09460401
         BZ    WRTRN90C                no ' ', jump                R208 09460501
         SLR   R1,R14                  position of ' '             R208 09460601
         ST    R1,POSBL                store position              R208 09460701
         B     WRTRN90D                jump                        R208 09460801
WRTRN90C LR    R1,R7                   max position                R208 09460901
         ST    R1,POSBL                store position              R208 09461001
WRTRN90D MVI   TAB+64,X'00'            clear TAB                   R208 09461101
         MVI   TAB+0,X'04'             '00'x                       R208 09461201
         XR    R2,R2                   R2 = 0                      R208 09461301
         TRT   LINE(*-*),TAB           find '00'x                  R208 09461401
         EX    R15,*-6                 execute TRT                 R208 09461501
         BZ    WRTRN90E                no '00', jump               R208 09461601
         SLR   R1,R14                  position of '00'x           R208 09461701
         ST    R1,POS00                store position              R208 09461801
         B     WRTRN90F                jump                        R208 09461901
WRTRN90E LR    R1,R7                   max position                R208 09462001
         ST    R1,POS00                store position              R208 09462101
WRTRN90F MVI   TAB+0,X'00'             clear TAB                   R208 09462201
         MVI   TAB+126,X'04'           '='                         R208 09462301
         XR    R2,R2                   R2 = 0                      R208 09462401
         TRT   LINE(*-*),TAB           find '='                    R208 09462501
         EX    R15,*-6                 execute TRT                 R208 09462601
         BZ    WRTRN90G                no '=', DROP var?           R208 09462701
         SLR   R1,R14                  position of '='             R208 09462801
         ST    R1,POSEQ                store position              R208 09462901
         B     WRTRN90H                jump                        R208 09463001
WRTRN90G EQU   *                       DROP var                    R208 09463101
         CL    R7,POSST                '*' in line?                R208 09463201
         BH    WRTRTN99                yes - jump back to EDIF     R208 09463301
         LR    R2,R14                  convert to uppercase        R208 09463401
         L     R3,LRECL                convert to uppercase        R208 09463501
         OI    0(R2),X'40'             convert to uppercase        R208 09463601
         LA    R2,1(,R2)               convert to uppercase        R208 09463701
         BCT   R3,*-8                  convert to uppercase        R208 09463801
         CLC   LINE(5),=C'DROP '       DROP a variable?            R208 09463901
         BNE   WRTRTN99                no - jump back to EDIF      R208 09464001
         LA    R1,5                    R1 = 5                      R208 09464101
         LR    R2,R14                  R2 = Address of LINE        R208 09464201
         AR    R2,R1                   Start of var name           R208 09464301
         ST    R2,SHVNAMA              ADDRESS OF VARIABLE NAME    R208 09464401
         L     R2,POS00                end of variable name        R208 09464501
         SLR   R2,R1                   R2 = R2 - 5                 R208 09464601
         ST    R2,SHVNAML              LENGTH OF VARIABLE NAME     R208 09464701
         LA    R1,250                  max length of var name      R208 09464801
         CR    R2,R1                   name too long?              R208 09464901
         BH    WRTRTN99                yes, goback to EDIF         R208 09465001
         MVI   SHVCODE,SHVDROPV        DROP VARIABLE               R208 09465101
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)  R208 09465201
         BALR  R14,R15              <- DROP VARIABLE               R208 09465301
         B     WRTRTN99                jump back to EDIF           R208 09465401
WRTRN90H EQU   *                       SET var                     R208 09465501
         CLC   POSST,POSEQ             '*' before '=' ?            R208 09465601
         BL    WRTRTN99                yes - jump back to EDIF     R208 09465701
         CLC   POSBL,POSEQ             ' ' before '=' ?            R208 09465801
         BL    WRTRN90I                yes - jump over next libes  R208 09465901
         ST    R14,SHVNAMA             ADDRESS OF VARIABLE NAME    R208 09466001
         L     R1,POSEQ                POS of '=' is var length    R208 09466101
         ST    R1,SHVNAML              set var length              R208 09466201
         B     WRTRN90J                jump over next lines        R208 09466301
WRTRN90I ST    R14,SHVNAMA             ADDRESS OF VARIABLE NAME    R208 09466401
         L     R1,POSBL                POS of ' ' is var length    R208 09466501
         ST    R1,SHVNAML              set var length              R208 09466601
WRTRN90J L     R1,POSEQ                R1 = pos of '='             R208 09466701
         L     R2,POS00                R2 = End of line            R208 09466801
         SLR   R2,R1                   R2 = R2 - R1                R208 09466901
         ST    R2,SHVVALL              set value length            R208 09467001
         LA    R1,1(,R1)               R1 = R1 + 1                 R208 09467101
         AR    R1,R14                  R1 = R1 + address of line   R208 09467201
         ST    R1,SHVVALA              Convert variable name to    R208 09467301
         L     R2,SHVNAMA              uppercase                   R208 09467401
         L     R3,SHVNAML              convert to uppercase        R208 09467501
         LA    R1,250                  max length of var name      R208 09467601
         CR    R3,R1                   name too long?              R208 09467701
         BH    WRTRTN99                yes, goback to EDIF         R208 09467801
         OI    0(R2),X'40'             convert to uppercase        R208 09467901
         LA    R2,1(,R2)               convert to uppercase        R208 09468001
         BCT   R3,*-8                  convert to uppercase        R208 09468101
         MVI   SHVCODE,SHVSTORE        STORE VARIABLE              R208 09468201
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)  R208 09468301
         BALR  R14,R15              <- STORE VARIABLE              R208 09468401
         B     WRTRTN99                jump back to EDIF           R208 09468501
*                                                                       09468601
WRTRTN99 L     R13,4(,R13)             EDIF SAVE AREA                   09468701
         RETURN (14,12),RC=0           GOBACK TO BRIF (EOF)             09468801
         DROP  R12                                                      09468901
*********************************************************************** 09469001
*                                                                     * 09469101
*        Build Variable Name                                          * 09469201
*                                                                     * 09469301
*********************************************************************** 09469401
BLDVARNM CVD   R0,DWD                  seqno                            09469501
         BALR  R2,0                 <- local base                       09469601
         MVC   LINE(8),=X'4020202020202020'-*(R2)                       09469701
         LM    R2,R3,STEMNAME          2ND ARG (VAR NAME)               09469801
         LA    R0,VARNAME              "to" addr                        09469901
         LR    R1,R3                   "to" length                      09470001
         MVCL  R0,R2                   move stem name "LINE."           09470101
         EDMK  LINE(8),DWD+4           unpack 7 digits                  09470201
         LR    R2,R1                   addr of 1st non-zero byte        09470301
         LA    R3,LINE+8               calc length                      09470401
         SLR   R3,R2                   calc length                      09470501
         LR    R1,R3                   "to" length                      09470601
         MVCL  R0,R2                   move seq number                  09470701
         LA    R1,VARNAME              "to" addr                        09470801
         SLR   R0,R1                   calc length of variable name     09470901
         ST    R0,SHVNAML              LENGTH OF VARIABLE NAME          09471001
         BR    R15                     GOBACK                           09471101
*********************************************************************** 09471201
*                                                                     * 09471301
*        CONSTANTS                                                    * 09471401
*                                                                     * 09471501
*********************************************************************** 09471601
$CONTROL DC    C'CONTROL '                                              09471701
$ERRORS  DC    C'ERRORS '                                               09471801
$RETURN  DC    C'RETURN '                                               09471901
$DISPLAY DC    C'DISPLAY '                                              09472001
$REFRESH DC    C'REFRESH '                                              09472101
$VCOPY   DC    C'VCOPY '                                                09472201
$VERASE  DC    C'VERASE '                                               09472301
$SETMSG  DC    C'SETMSG '                                               09472401
$VDEFINE DC    C'VDEFINE '                                              09472501
$ZERRMSG DC    C'ZERRMSG '                                              09472601
$ZENVIR  DC    C'ZENVIR '                                               09472701
$SAVE    DC    C'SAVE '                                                 09472801
$RESTORE DC    C'RESTORE '                                              09472901
$ZCMD    DC    C'ZCMD '                                                 09473001
$VIEW    DC    C'VIEW '                                                 09473101
$MOVE    DC    C'MOVE '                                                 09473201
SYNTAXMSG DC     C'Syntax: CALL STEMEDIT service<,stemname><,firstelem>X09473301
               <,stemcount><,title><,panel><,lrecl><,recfm><,profile>'  09473401
*********************************************************************** 09473501
*                                                                     * 09473601
*        Dynamic Storage Area - LOC=BELOW                             * 09473701
*                                                                     * 09473801
*********************************************************************** 09473901
DYNAM    DSECT                                                          09474001
         DS    18F                     MAIN-LINE                        09474101
SAVE2    DS    18F                     Save area for cmd rtne           09474201
SAVE3    DS    18F                     Save area for read/write rtnes   09474301
*                                                                       09474401
DWD      DS    D                       work area for CVB/CVD            09474501
R15R0R1  DS    A(R15,R0,R1)            regs at entry to STEMEDIT        09474601
ISPLINKA DS    V(ISPLINK)              ISPF INTERFACE                   09474701
ADDR_OF_ENVBLOCK EQU R15R0R1+4,4,C'A'  ENVIRONMENT BLOCK                09474801
PANEL_NAME DS  C'ISRBROBA'             PANEL (6th arg)                  09474901
TITLE    DS    CL54                    Title                            09475001
SERVICE  DS    C'BROWSE'               ISPF Service ("B" or "V" or "E") 09475101
RECFM    DS    C'V '                   record format                    09475201
PROFILE_NAME DS CL8'TEXT'              profile name for EDIF/VIIF       09475301
STEMNAME DS    A,F                     ADDR/LEN OF STEM NAME (2nd arg)  09475401
CURRECNO DS    F                       first element (3rd arg)          09475501
STEMCOUNT DS   F                       number of variables (4th arg)    09475601
LRECL    DS    F                       record length (7th arg)          09475701
LASTLINE DS    F                       last line number                 09475801
WRTLINUM DS    F                       line number for write rtne       09475901
LINE_LEN_ADDR DS F,A(LINE_DSECT)       length and address of LINE fld   09476001
PARMLIST DS    12F                     EDIF/BRIF/VIIF Parm List         09476101
RDCMDWR  DS    A(RDRTNE,CMDRTNE,WRITERTN) READ/CMD/WRITE Routines       09476201
IRXEXCOM_REGS DS A(R15,R0,R1)          IRXEXCOM                         09476301
IRXEXCOM_PARM DS 4A                    IRXEXCOM                         09476401
IRXSTK_PARM DS 6A                      IRXSTK                           09476501
DYNAM_SHVB DS  XL(SHVBLEN)             SHVB (IRXEXCOM)                  09476601
RETCODE  DS    F                       RETURN CODE                      09476701
VALUE    DS    F                       VALUE RETURNED BY FUNCTION       09476801
VARNAME  DS    CL255                   variable name                    09476901
VAR1     DS    CL1                     VARNAME first character     R208 09477001
VARL     DS    CL1                     Form of var-list S or L     R208 09477101
POSEQ    DS    F                       position of '='             R208 09477201
POSBL    DS    F                       position of ' '             R208 09477301
POS00    DS    F                       position of '00'x           R208 09477401
POSST    DS    F                       position of '*'             R208 09477501
ZENVIR   DS    CL32'ISPF 3.2'          CURRENT ISPF LEVEL               09477601
ZERRMSG  DS    CL8                     error message                    09477701
WORK80   DS    CL80                    work area                        09477801
BLANKS   DS    CL256                   a bunch of blanks                09477901
TAB      DS    XL256                   table for TRT               R208 09478001
DYNAML   EQU   *-DYNAM                                                  09478101
*                                                                       09478201
LINE_DSECT DSECT                       RMODE=31                         09478301
LINEAL   DS    0CL33016                Line in * output, long varn R208 09478401
LVARNL   DS    CL216                   Long varname in * output    R208 09478501
LINEA    DS    0CL32800                Line in * output            R208 09478601
LVARN    DS    CL40                    Varname in * output         R208 09478701
LINE     DS    CL32760                                                  09478801
*                                                                       09478901
         PRINT NOGEN                                                    09479001
         IRXEFPL DSECT=YES             External Function Parm List      09479101
         IRXENVB                       Environment Block                09479201
         IRXEXTE                       External Function Entry Points   09479301
         IRXSHVB                       Shared REXX Variable Req Block   09479401
         YREGS                         Register Equates (R0-R15)        09479501
         END                                                            09479601
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR                                  09479700
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)                                    09479800
//SYSPRINT DD SYSOUT=*                                                  09479900
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),BLKSIZE=3200          09480000
//*                                                                     09480100
//LKED    EXEC PGM=IEWL,PARM='LIST,MAP,RENT,REFR'                       09480200
//SYSLIN   DD DSN=*.HLASM.SYSLIN,DISP=(OLD,DELETE)                      09480300
//SYSPRINT DD SYSOUT=*                                                  09481000
//SYSLMOD  DD DSN=T311LBD.LIONEL.LOAD(STEMEDIT),DISP=SHR                09490000
